<?
// ----------------------ПРИМЕР



register_post_type('place', array(
'label' => 'места',
'labels' => array(
'name' => 'места',
),
'public' => true, // является ли тип записи публичным или нет
'publicly_queryable' => true,
//true включит публичный просмотр записей этого типа -
//это значит что во фронт-энде будут работать URL запросы для этого типа записей, например:
//
'show_ui' => true, // нужно ли создавать логику управления типом записи из админ-панели.
'show_in_rest' => true, //включать тип записи в REST API. true — добавит тип записи в маршрут wp/v2
// 'capability_type' => 'post', // установки прав для этого типа записи
// 'map_meta_cap' => true, // дефолтный обработчик специальных прав map_meta_cap ?
'hierarchical' => true, // Будут ли записи этого типа иметь древовидную структуру (как постоянные страницы).
'supports' => array('title','editor','thumbnail','excerpt','comments','author'),
'rewrite' => array(
'slug'=>'places',
'with_front'=>true,
'pages'=>false,
'feeds'=>false,
'feed'=>false
),
'rewrite' => true,
// Использовать ли ЧПУ для этого типа записи. Чтобы не использовать ЧПУ укажите false.
// По умолчанию: true — название типа записи используется как префикс в ссылке.
//Можно в массиве указать дополнительные параметры для построения ЧПУ:

// slug(строка)
// Префикс в ЧПУ (/префикс/ярлык_записи). Используйте [ 'slug' => $slug ], чтобы создать другой префикс.

// В этом параметре можно указывать плейсхолдеры типа %category%.
// Но они должны регистрироваться отдельно или их нужно создать с помощью add_rewrite_tag(), чтобы WP знал о них.
// По умолчанию: название типа записи

// with_front(логический)
// Нужно ли в начало вставлять общий префикс из настроек. Префикс берется из $wp_rewite->front.
//Например, если структура постоянных ссылок записей в настройках имеет вид blog/%postname%, то при false получим:
// /news/название_поста,
// //а при true получим: /blog/news/название_поста.
// // По умолчанию: true

// // feeds(логический)
// // Добавить ли правило ЧПУ для RSS ленты этого типа записи.
// // По умолчанию: значение аргумента has_archive

// // pages(логический)
// // Добавить ли правило ЧПУ для пагинации записи. Пр: /post_type/page/2. Т.е. если указано true, то в записи можно
// будет использовать шоркод
// <!--nextpage-->. Смотрите wp_link_pages().
// // По умолчанию: true
// // По умолчанию: true (тип записи используется как префикс)
'has_archive' => true, // Включить поддержку страниц архивов для этого типа записей
'query_var' => true, // Устанавливает название параметра запроса для создаваемого типа записи.
//false - отключает параметр запроса. Запись не будет доступна по URL: /?{query_var}={post_slug}.
//string - указывает название параметра зпроса. /?{query_var_string}={post_slug}.
'capability_type' => 'post',
// 'rewrite' => array('slug'=>'place','with_front'=>true,),
//'taxonomies' => array( 'place_categiry' ),
));

register_taxonomy(
'place_categiry',
array('place'),
array(
'label' => __('place'),
// 'public' => true,
// 'show_in_nav_menus' => false, // возможность выбирать элементы этой таксономии в навигационном меню.
// 'show_ui' => true, // равен аргументу public
// 'show_tagcloud' => false, // виджет облако элементов этой таксономии (как облако меток).
'hierarchical' => true, // включает чек боксы
'query_var' => true,
'rewrite' => array(
'slug'=>'places', // предваряет таксономии этой строкой. По умолчанию название таксономии.
// 'with_front'=>true, // позволяет установить префикс для постоянной ссылки. По умолчанию
// 'hierarchical'=>false, // true - включает поддержку древовидных URL (с версии 3.1). По умолчанию false.
),
// 'show_admin_column' => true,
)
// Позволить или нет авто-создание колонки таксономии в таблице ассоциированного типа записи. (с версии 3.5)
);